{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "binaryPropertyName": "data0",
        "options": {}
      },
      "id": "17c2f751-3bc0-4cc9-9f2b-13cb806e2732",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        640,
        460
      ]
    },
    {
      "parameters": {
        "jsCode": "return $input.all().map((data) => {\n  let lead = data.json;\n  // Separate first name\n  let splitName = lead.name.split(\" \");\n  // Remove any non-numeric character\n  let phone = lead.phone.replace(/\\D/g, \"\");\n  // Check and add the country prefix if necessary\n  if (!phone.startsWith(\"55\")) phone = \"55\" + phone;\n  // Add 9 to the phone number\n  if (phone.length === 12) phone = phone.slice(0, 4) + \"9\" + phone.slice(4);\n  // Add 0s to the start of the cpf if necessary\n  let cpf = lead.cpf.padStart(11, \"0\");\n  // Format float\n  const releasedValue = parseFloat(lead.released_value).toFixed(2);\n  // Calculate age\n  const [day, month, year] = lead.birthdate.split(\"/\");\n  const birthDate = new Date(year, month - 1, day);\n  const age = new Date().getFullYear() - birthDate.getFullYear();\n\n  return {\n    json: {\n      name: lead.name,\n      first_name: splitName[0],\n      last_name: splitName[splitName.length - 1],\n      cpf: cpf,\n      age: age,\n      phone: phone,\n      birthdate: lead.birthdate,\n      created_at: new Date(),\n      released_value: parseFloat(releasedValue),\n    },\n  };\n});\n"
      },
      "id": "9d78520c-e139-4cf4-af29-4f81082f5d5b",
      "name": "Format Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        460
      ],
      "notesInFlow": true,
      "notes": "Formats the CSV fields"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"message\": \"Successfuly saved/updated all leads\"\n}",
        "options": {}
      },
      "id": "3a694c25-10fe-4295-ace0-f9a0f5418db2",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1180,
        460
      ]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {
          "responseCode": 200
        }
      },
      "id": "88d7abea-c27c-4bca-88b8-aa81ece726b5",
      "name": "Success Response1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1420,
        640
      ],
      "notesInFlow": true,
      "notes": "Returns a response with the data found."
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"message\": \"Nenhum lead foi encontrado\"\n}",
        "options": {
          "responseCode": 404
        }
      },
      "id": "f6cdb984-3ed5-40f8-95ef-47d6be353c75",
      "name": "Not found Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1420,
        820
      ],
      "notesInFlow": true,
      "notes": "Returns a not found message"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"message\": \"Phone number not provided\"\n}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "64673fb6-0564-4dc7-9243-a7bd5fd221b7",
      "name": "Bad Request Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1020,
        920
      ]
    },
    {
      "parameters": {
        "operation": "findOneAndUpdate",
        "collection": "lead",
        "updateKey": "cpf",
        "fields": "=first_name,last_name,name,birthdate,phone,cpf,released_value,age,created_at",
        "upsert": true,
        "options": {
          "dateFields": "created_at"
        }
      },
      "id": "639c798b-0b60-4419-b6aa-b2d8307d592c",
      "name": "Upsert/Update",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        1000,
        460
      ],
      "credentials": {
        "mongoDb": {
          "id": "oZX5j9kNaexV4cu5",
          "name": "MongoDB account"
        }
      }
    },
    {
      "parameters": {
        "collection": "lead",
        "options": {},
        "query": "={ \"phone\": \"{{ $json.phone }}\"  }"
      },
      "id": "82b5d813-e851-4b7f-8aa1-6be15c7d3d18",
      "name": "Find",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1.1,
      "position": [
        1020,
        740
      ],
      "alwaysOutputData": true,
      "notesInFlow": true,
      "credentials": {
        "mongoDb": {
          "id": "oZX5j9kNaexV4cu5",
          "name": "MongoDB account"
        }
      },
      "notes": "Queries the database for the lead based on the phone received."
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "return $input.item.json.body"
      },
      "id": "e89cbb45-0b38-4df4-b5fd-666991359ab6",
      "name": "Parse Body",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        840
      ],
      "executeOnce": true,
      "notesInFlow": true,
      "notes": "Returns the json body"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "lead",
        "responseMode": "responseNode",
        "options": {
          "binaryPropertyName": "data"
        }
      },
      "id": "2e7996fe-33e5-4aa6-9a12-ac952d736cf0",
      "name": "POST Endpoint",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        460,
        460
      ],
      "webhookId": "2d367b15-d6fb-4cb4-9c5b-94e65dbcb7ca",
      "notesInFlow": true,
      "notes": "Receives POST request with CSV file to store on the database."
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ !$json.phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9add5f24-afa1-4fb3-add0-012fa17e2e0d",
                    "leftValue": "={{ !$json.phone }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "3279f776-ae10-455a-8c94-237c3cb58104",
      "name": "Check Phone",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        820,
        840
      ],
      "notesInFlow": true,
      "notes": "checks if the phone attribute is present"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{$json.isEmpty()}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0fecc1c5-7314-4b26-ae16-0f84333758ed",
                    "leftValue": "={{$json.isEmpty()}}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "id": "02366169-2cb1-419a-bad9-9b6ad38a7010",
      "name": "Check Data",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1220,
        740
      ],
      "notesInFlow": true,
      "notes": "Check if the query result is empty"
    },
    {
      "parameters": {
        "path": "consulta",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "165a02d2-cce6-4d8a-b0a2-f050ce7b3d20",
      "name": "GET Endpoint",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        440,
        840
      ],
      "webhookId": "363d85bc-2c2d-4b6e-b55d-72fea659879c",
      "notesInFlow": true,
      "notes": "Receives a GET request with a phone attribute on the request body."
    }
  ],
  "pinData": {},
  "connections": {
    "Extract from File": {
      "main": [
        [
          {
            "node": "Format Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Data": {
      "main": [
        [
          {
            "node": "Upsert/Update",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upsert/Update": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Find": {
      "main": [
        [
          {
            "node": "Check Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Body": {
      "main": [
        [
          {
            "node": "Check Phone",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "POST Endpoint": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Phone": {
      "main": [
        [
          {
            "node": "Find",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Bad Request Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Data": {
      "main": [
        [
          {
            "node": "Success Response1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not found Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GET Endpoint": {
      "main": [
        [
          {
            "node": "Parse Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "25d61833-b295-48fb-a8e8-ee48e542c06d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "bd6b8505ac4c76f35b2fffaaf02ced26e76045830da3240dce8e6780c881aeb2"
  },
  "id": "0i4g6wtEyZqwZnv0",
  "tags": []
}